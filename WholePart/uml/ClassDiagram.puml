/** 
@startuml

	abstract class MenuComponent {
	+void add(MenuComponent menuComponent)
	+void remove(MenuComponent menuComponent)
	+MenuComponent getChild(int i)
	+String getName()
	+String getDescription()
	+double getPrice()
	+boolean isVegetarian()
	+void print()
	}
	
	class Menu {
		~ArrayList<MenuComponent> menuComponents
		~String name
		~String description
		+Menu(String name, String description)
		+void add(MenuComponent menuComponent)
		+void remove(MenuComponent menuComponent)
		+MenuComponent getChild(int i)
		+String getName()
		+String getDescription()
		+void print()
	}
	abstract class MenuComponent {
	}
	MenuComponent <|-- Menu 
	
	class MenuItem {
		~String name
		~String description
		~boolean vegetarian
		~double price
		+MenuItem(String name, String description, boolean vegetarian, double price)
		+String getName()
		+String getDescription()
		+double getPrice()
		+boolean isVegetarian()
		+void print()
	}
	abstract class MenuComponent {
	}
	MenuComponent <|-- MenuItem
	
	class Waitress {
		~MenuComponent allMenus
		+Waitress(MenuComponent allMenus)
		+void printMenu()
	}
	Menu *-- MenuItem
	Waitress --> MenuComponent

@enduml
*/
