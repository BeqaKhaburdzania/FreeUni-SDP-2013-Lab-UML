@startuml

actor main

create LittleBank
main -> LittleBank : new()

create LittleBankServiceOrganizer

LittleBank -> LittleBankServiceOrganizer : new()

LittleBank -> LittleBankServiceOrganizer : createBankEntities()

activate LittleBankServiceOrganizer

loop

    create Queue
    LittleBankServiceOrganizer -> Queue : new(this)

end

loop

    create Teller
    LittleBankServiceOrganizer -> Teller : new(this)

end

deactivate LittleBankServiceOrganizer

LittleBank -> LittleBankServiceOrganizer : getQueueNumber()

activate LittleBankServiceOrganizer

LittleBank <-- LittleBankServiceOrganizer

deactivate LittleBankServiceOrganizer

LittleBank -> LittleBankServiceOrganizer : getTellerNumber()

activate LittleBankServiceOrganizer

LittleBank <-- LittleBankServiceOrganizer

deactivate LittleBankServiceOrganizer

main -> LittleBank : showStatus()

activate LittleBank

    LittleBank -> LittleBankServiceOrganizer : getTellerNumber()

    activate LittleBankServiceOrganizer

    LittleBank <-- LittleBankServiceOrganizer

    deactivate LittleBankServiceOrganizer

    loop

        LittleBank -> LittleBankServiceOrganizer : getTeller(i)
        activate LittleBankServiceOrganizer
            LittleBank <-- LittleBankServiceOrganizer
        deactivate LittleBankServiceOrganizer

        LittleBank -> Teller : isFree()
        activate Teller
            LittleBank <-- Teller
        deactivate Teller

    end

    LittleBank -> LittleBankServiceOrganizer : getQueueNumber()

    activate LittleBankServiceOrganizer

    LittleBank <-- LittleBankServiceOrganizer

    deactivate LittleBankServiceOrganizer

    loop

        LittleBank -> LittleBankServiceOrganizer : getQueue(i)
        activate LittleBankServiceOrganizer
            LittleBank <-- LittleBankServiceOrganizer
        deactivate LittleBankServiceOrganizer

        LittleBank -> Queue : getSize()
        activate Queue
            LittleBank <-- Teller
        deactivate Queue

    end

deactivate LittleBank

@enduml